# Copyright 2015 CenturyLink
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#    http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: Add/Delete Servers to Maintain Size of Server Group
  hosts: localhost
  gather_facts: False
  connection: local
  vars:
    public_key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    server_group: 'Default Group'
    group_size: 15
  tasks:
    - name: Generate Server Admin Password
      command: openssl rand -base64 15
      register: serverpass
      changed_when: False

    - name: Build New Servers if Needed
      clc_server:
        name: dbsvr
        template: ubuntu-14-64
        password: "{{ serverpass.stdout }}"
        exact_count: "{{ group_size }}"
        group: "{{ server_group }}"
        count_group: "{{ server_group }}"
      register: clc

    - name: Wait for SSH to Come up on New Servers
      wait_for: host={{ item.ipaddress }} port=22 delay=5 timeout=320 state=started
      with_items: clc.servers

    - name: Update known_hosts With New Servers
      shell: "ssh-keygen -R {{ item.ipaddress }} && ssh-keyscan -t rsa -H {{ item.ipaddress }} >> ~/.ssh/known_hosts"
      with_items: clc.servers

    - name: Deploy Ssh Key to New Servers
      shell: "echo '{{ public_key }}'|sshpass -p '{{ serverpass.stdout }}' ssh root@{{ item.ipaddress }} 'cat >> ~/.ssh/authorized_keys'"
      with_items: clc.servers

    - name: Add New Servers to the newservers Group
      add_host:
        name={{ item.name }}
        ansible_ssh_host={{ item.ipaddress }}
        ansible_ssh_user=root
        groupname=newservers
      with_items: clc.servers

- name: Add Deployment User
  hosts: newservers
  vars:
    public_key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
  tasks:
    - group:
        name=deploy
        state=present

    - lineinfile:
        dest=/etc/sudoers
        state=present
        regexp='%deploy ALL'
        line='%deploy ALL=(ALL) NOPASSWD:ALL'

    - user:
        name=msdcdeploy
        groups=deploy
        state=present

    - authorized_key:
        user=msdcdeploy
        state=present
        key="{{ public_key }}"
