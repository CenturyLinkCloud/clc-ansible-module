# Copyright 2017 CenturyLink
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#    http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- name: Test clc_loadbalancer.py Ansible Module
  hosts: localhost
  vars:
    location: 'CA3'
    group_name: 'Ansible Module Test'
    server_name: 'AnsTst'
    server_template: 'CENTOS-7-64-TEMPLATE'
    loadbalancer_name: 'Ansible Module Test'
  gather_facts: False
  connection: local
  tasks:
    - name: Setup - Ensure group present
      clc_group:
        location: "{{ location }}"
        name: "{{ group_name }}"
        state: present

    - name: Setup - Ensure 2 servers exist in group
      clc_server:
        name: "{{ server_name }}"
        template: "{{ server_template }}"
        location: "{{ location }}"
        group: "{{ group_name }}"
        count_group: "{{ group_name }}"
        min_count: 2
      register: group_info

    - name: Setup - Get Server Facts
      clc_server_fact:
        server_id: "{{ item }}"
      with_items: "{{ group_info.group.servers }}"
      register: server_info


    - name: Setup - Verify loadbalancer absent
      clc_loadbalancer:
        name: "{{ loadbalancer_name }}"
        location: "{{ location }}"
        state: absent
      register: loadbalancer_absent


    - name: Test - Create new loadbalancer
      clc_loadbalancer:
        name: "{{ loadbalancer_name }}"
        location: "{{ location }}"
        state: present
      register: loadbalancer_create
    - name: Assert - Policy created
      assert:
        that:
          - loadbalancer_create.changed == True

    - name: Test - Pool absent
      clc_loadbalancer:
        name: "{{ loadbalancer_name }}"
        location: "{{ location }}"
        port: 443
        state: port_absent
      register: nodes_create

    - name: Test - Create nodes in pool
      clc_loadbalancer:
        name: "{{ loadbalancer_name }}"
        location: "{{ location }}"
        port: 443
        nodes:
          - {ipAddress: "{{ server_info.results[0].server.ipaddress }}", privatePort: 443}
        state: present
      register: nodes_create
    - name: Assert - Nodes created
      assert:
        that:
          - nodes_create.changed == True

    - name: Test - Ensure nodes exist in pool
      clc_loadbalancer:
        name: "{{ loadbalancer_name }}"
        location: "{{ location }}"
        port: 443
        nodes:
          - {ipAddress: "{{ server_info.results[0].server.ipaddress }}", privatePort: 443}
        state: present
      register: nodes_present
    - name: Assert - Nodes exist
      assert:
        that:
          - nodes_present.changed == False

    - name: Test - Add nodes to pool
      clc_loadbalancer:
        name: "{{ loadbalancer_name }}"
        location: "{{ location }}"
        port: 443
        nodes:
          - {ipAddress: "{{ server_info.results[1].server.ipaddress }}", privatePort: 443}
        state: nodes_present
      register: nodes_add
    - name: Assert - Nodes added
      assert:
        that:
          - nodes_add.changed == True

    - name: Test - Remove nodes from pool
      clc_loadbalancer:
        name: "{{ loadbalancer_name }}"
        location: "{{ location }}"
        port: 443
        nodes:
          - {ipAddress: "{{ server_info.results[0].server.ipaddress }}", privatePort: 443}
        state: nodes_absent
      register: nodes_remove
    - name: Assert - Nodes removed
      assert:
        that:
          - nodes_remove.changed == True

    - name: Test - Ensure nodes updated
      clc_loadbalancer:
        name: "{{ loadbalancer_name }}"
        location: "{{ location }}"
        port: 443
        nodes:
          - {ipAddress: "{{ server_info.results[1].server.ipaddress }}", privatePort: 443}
        state: nodes_present
      register: nodes_updated
    - name: Assert - Nodes updated
      assert:
        that:
          - nodes_updated.changed == False


    - name: Test - Remove policy
      clc_loadbalancer:
        name: "{{ loadbalancer_name }}"
        location: "{{ location }}"
        state: absent
      register: loadbalancer_remove
    - name: Assert - Policy absent
      assert:
        that:
          - loadbalancer_remove.changed == True

    - name: Test - Verify Policy does not exist
      clc_loadbalancer:
        name: "{{ loadbalancer_name }}"
        location: "{{ location }}"
        state: absent
      register: loadbalancer_absent
    - name: Assert - Policy absent
      assert:
        that:
          - loadbalancer_absent.changed == False


    - name: Tear Down - Ensure 0 servers exist in group
      clc_server:
        name: "{{ server_name }}"
        template: "{{ server_template }}"
        location: "{{ location }}"
        group: "{{ group_name }}"
        count_group: "{{ group_name }}"
        exact_count: 0

    - name: Tear Down - Ensure group absent
      clc_group:
        location: "{{ location }}"
        name: "{{ group_name }}"
        state: absent
