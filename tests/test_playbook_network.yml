# Copyright 2017 CenturyLink
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- name: Test clc_network.py Ansible Module
  hosts: localhost
  vars:
    location: 'CA3'
    network_name: 'AnsibleTest'
    network_description: 'Ansible Module Test'
  gather_facts: False
  connection: local
  tasks:
    - name: Setup - Verify network absent
      clc_network:
        name: "{{ network_name }}"
        location: "{{ location }}"
        state: absent
        wait: True
      register: net_absent

    # Creation of networks can incur a monthly cost, especially when multiple
    # networks are present in a single data center.
    # See https://www.ctl.io/pricing for network cost information.
    - name: Test - Create new network
      clc_network:
        name: "{{ network_name }}"
        location: "{{ location }}"
        state: present
        wait: True
      register: net_create
    - name: Assert - Network created
      assert:
        that:
          - net_create.changed == True

    - name: Test - Verify new network present
      clc_network:
        name: "{{ network_name }}"
        location: "{{ location }}"
        state: present
        wait: True
      register: net_present
    - name: Assert - Network present
      assert:
        that:
          - net_present.changed == False

    - name: Test -  Update Network Description
      clc_network:
        name: "{{ network_name }}"
        location: "{{ location }}"
        description: "{{ network_description }}"
        state: present
        wait: True
      register: net_updated
    - name: Assert - Network updated
      assert:
        that:
          - net_updated.changed == True
          - net_updated.network.description == "{{ network_description }}"

    - name: Test - Remove new network
      clc_network:
        name: "{{ network_name }}"
        location: "{{ location }}"
        state: absent
        wait: True
      register: net_remove
    - name: Assert - Network absent
      assert:
        that:
          - net_remove.changed == True
